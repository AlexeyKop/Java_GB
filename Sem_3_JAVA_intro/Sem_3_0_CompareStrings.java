package Sem_3_JAVA_intro;/*–ó–∞–¥–∞–Ω–∏–µ No0
 üìå–î–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏, c—Ä–∞–≤–Ω–∏—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é == (–°–†–ê–í–ù–ò–í–ê–ï–¢ –°–°–´–õ–ö–ò –ù–ê –û–ë–™–ï–ö–¢–´)–∏ –º–µ—Ç–æ–¥–∞ equals() –∫–ª–∞—Å—Å–∞ Object
 üìåString s1 = "hello";
 üìåString s2 = "hello";
 üìåString s3 = s1;
 üìåString s4 = "h" + "e" + "l" + "l" + "o";
 üìåString s5 = new String("hello");
 üìåString s6 = new String(new char[]{'h', 'e', 'l', 'l', 'o'});*/
/*–°—Ç–µ–∫ (stack) ‚Äî —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Å—Ö–µ–º–µ LIFO (–ø–æ—Å–ª–µ–¥–Ω–∏–º –≤–æ—à—ë–ª, –ø–µ—Ä–≤—ã–º –≤—ã—à–µ–ª).
–°—Ç–µ–∫ —Ö—Ä–∞–Ω–∏—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –≤ –º–µ—Ç–æ–¥–∞—Ö, –∞ —Ç–∞–∫–∂–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã –≤ –∫—É—á–µ.

–ö—É—á–∞ (heap) ‚Äî —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏
–∫–ª–∞—Å—Å–æ–≤ JRE –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ù–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –∫—É—á–µ, –∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å—Ç–µ–∫–µ.*/

public class Sem_3_0_CompareStrings {
    public static void main(String[] args) {
        String s1 = "hello";    //–µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ª–∏—Ç–µ—Ä–∞–ª–æ–≤ "", —Ç–æ –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                                // –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –ü–£–õ –°–¢–†–û–ö –≤ HEAP (–∫—É—á–∞)
        String s2 = "hello";
        String s3 = s1;
        String s4 = "h" + "e" + "l" + "l" + "o";
        String s5 = new String("hello");
        String s6 = new String(new char[]{'h', 'e', 'l', 'l', 'o'});

        System.out.println(s1 == s2);
        System.out.println(s1.equals(s2));  //—Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –≤ Java –Ω–∞–¥–æ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ s1.equals(s2) –∫–ª–∞—Å—Å–∞ Object
        System.out.println();
        System.out.println(s1 == s3);
        System.out.println(s1.equals(s3)); // –º–µ—Ç–æ–¥ s1.equals(s2) —Ç–æ–∂–µ –∫–∞–∫ –∏ (==) —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏,
                                            // –Ω–æ –≤ –∫–ª–∞—Å—Å–µ String –æ–Ω –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–ï–ù
                                    // –∫–ª–∞—Å—Å String –Ω–∞—Å–ª–µ–¥—É–µ—Ç –∫–ª–∞—Å—Å Object
        System.out.println("s1 == s4");
        System.out.println(s1 == s4);
        System.out.println(s1.equals(s4));

        System.out.println("s1 == s5");
        System.out.println(s1 == s5);
        System.out.println(s1.equals(s5));

        System.out.println("s1 == s6");
        System.out.println(s1 == s6);
        System.out.println(s1.equals(s6));

        System.out.println("s5 == s6");
        System.out.println(s5 == s6);
        System.out.println(s5.equals(s6));
    }
}

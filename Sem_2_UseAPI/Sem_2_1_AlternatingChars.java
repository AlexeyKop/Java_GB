package Sem_2_UseAPI;

/*–ó–∞–¥–∞–Ω–∏–µ No1
üìå–î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2.
üìå–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.*/
public class Sem_2_1_AlternatingChars {
    public static void main(String[] args) {
        int N = 100_000; // –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ // ababababab
        char c1 = 'a';
        char c2 = 'b';


//        System.out.println(getAlternatingCharsString(N, c1, c2));
//        System.out.println(getAlternatingCharsSB(N, c1, c2));

        // —Å—Ä–∞–≤–Ω–∏–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        long start = System.currentTimeMillis();    // long (64-bit-–Ω—ã–π int)- –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        getAlternatingCharsString(N, c1, c2);
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        getAlternatingCharsSB(N, c1, c2);
        System.out.println(System.currentTimeMillis() - start);


    }

    // —Å –ø–æ–º–æ—â—å—é String
    public static String getAlternatingCharsString(int N, char c1, char c2) {
        String str = "";
        for (int i = 0; i < N / 2; i++) {
            str += Character.toString(c1) + Character.toString(c2);
        }
        return str;
    }

    // —Å –ø–æ–º–æ—â—å—é StringBuilder
    public static String getAlternatingCharsSB(int N, char c1, char c2) {
        StringBuilder sb = new StringBuilder(N);    // –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ N, —Ç–æ –ª—É—á—à–µ —Å—Ä–∞–∑—É —É–∫–∞–∑–∞—Ç—å –≤ ()
        for (int i = 0; i < N / 2; i++) {
            sb.append(c1).append(c2);
        }
        return sb.toString();   //—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–≤–æ–¥–∏–º –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        // StringBuilder –∏—Å–ø–æ–ª—å–∑—É—Ç—Å—è –¥–ª—è —Å–±–æ—Ä–∫–∏
    }
}

package Sem_2_UseAPI;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

/*–ó–∞–¥–∞–Ω–∏–µ No5 üìå–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
üìå–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
üìå–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.*/
public class Sem_2_5_LogFile {
    private static Logger logger = Logger.getLogger(Sem_2_5_LogFile.class.getName());

    public static void configLogger(){
        try {
            FileHandler FH = new FileHandler("Sem_2_UseAPI/Logi.txt", true);
            logger.addHandler(FH);
            SimpleFormatter formatter = new SimpleFormatter();
            FH.setFormatter(formatter);
        } catch (IOException e) {
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args) {
        configLogger();
        String[] contentFolder = getContentFolder(".");
        // System.out.println(Arrays.toString(contentFolder));
        writeToFile(contentFolder, "Sem_2_UseAPI/TextFolder.txt");

    }
    public static String[] getContentFolder(String foldername){
        File folder = new File(foldername);
        return folder.list();
    }

    public static void writeToFile(String[] strs, String fileTEST) {
        try (FileWriter FW = new FileWriter(fileTEST)) {
            for (String str : strs) {   // —Ü–∏–∫–ª for each
                FW.write(str);
                FW.write(System.lineSeparator());   // —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, —Ç–∏–ø–∞ \n
            }

            System.out.println("data written to a file");
            logger.log(Level.INFO, "–î–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ!");
        } catch (Exception e) {
            logger.warning("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª");
            System.err.println("file write error");
        }
    }
}
